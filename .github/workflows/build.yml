name: Build and Release App

on:
  push:
    branches:
      - master
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    runs-on: windows-latest  # Use Windows to build the EXE

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run the build script
      - name: Build EXE with PyInstaller
        run: python build.py

      # Upload the EXE as an artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ParseData
          path: dist/ParseData.exe

      # Create a GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false

      # Upload the EXE to the release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/ParseData.exe
          asset_name: ParseData.exe
          asset_content_type: application/octet-stream